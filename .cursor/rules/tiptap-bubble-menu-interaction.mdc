---
description: 
globs: 
alwaysApply: false
---
# TiptapEditor 气泡菜单与 API 交互

[BubbleMenu.tsx](mdc:components/TiptapEditor/BubbleMenu.tsx) 是 TiptapEditor 中的关键组件，提供了文本选中时显示的气泡菜单，实现了与 AI 编辑器动作 API 的交互。

## 交互流程

1. 用户在编辑器中选中文本
2. 气泡菜单自动显示在选中文本上方
3. 用户点击菜单中的功能按钮（润色、扩写、边界分析、边界优化或 Chat With LLM）
4. 组件调用相应的 API 端点
5. 结果以流式方式返回并显示在浮窗中
6. 用户可以选择接受结果（替换/插入）或拒绝

## 关键功能实现

- `handlePolish()` - 实现润色功能，调用 `/api/ai-editor-action/polish`
- `handleExpand()` - 实现扩写功能，调用 `/api/ai-editor-action/expand`
- `handleBoundary()` - 实现边界分析功能，调用 `/api/ai-editor-action/boundary`
- `handleOptimize()` - 实现边界优化功能，调用 `/api/ai-editor-action/optimize`
- `handleChat()` - 实现与 AI 对话功能，调用 `/api/ai-editor-action/chat`

## 气泡菜单功能

- 每个功能按钮都有 tooltip 提示，鼠标悬停时会显示该功能的简要说明
- 润色按钮 - 使用AI智能润色和优化选中的文本
- 扩写按钮 - 基于选中内容进行扩展和丰富写作
- 边界分析按钮 - 分析选中内容的边界条件和异常情况
- 边界优化按钮 - 优化选中场景的边界条件和需求描述
- Chat With LLM按钮 - 基于选中内容与AI进行对话和提问

## 浮窗交互

- 浮窗固定初始大小 - 默认宽度800px，高度300px
- 浮窗位置计算 - `calculatePosition()` 函数计算浮窗的显示位置
- 拖动功能 - 用户可以拖动浮窗到屏幕任意位置
- 大小调整 - 用户可通过右下角的调整控件手动调整浮窗大小
- 按钮操作 - 提供五种统一的按钮操作：
  - 关闭按钮 (灰色) - 关闭浮窗
  - 复制按钮 (深橙色) - 复制结果内容到剪贴板
  - 替换按钮 (橙色) - 用结果替换选中的文本
  - 插入按钮 (金黄色) - 在选中文本后插入结果
  - 重新执行按钮 (亮黄色) - 重新执行当前操作

## 流式响应处理

所有 AI 功能都使用流式响应处理，核心逻辑位于 `editor-action-service.ts` 中，实现了以下流程：

1. 获取响应流
2. 解码并解析每个数据块
3. 提取结果文本
4. 实时更新 UI 显示
5. 支持Markdown到HTML的转换显示