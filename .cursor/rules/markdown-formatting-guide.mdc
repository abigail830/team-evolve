---
description: 
globs: 
alwaysApply: false
---
# Markdown 格式化指南

本指南总结了在项目中使用 `react-markdown` 进行内容渲染时的关键实践。我们通过自定义组件和 Tailwind CSS 来实现统一且美观的 Markdown 样式。

主要实现位于 [`app/[locale]/knowledge/templates/[id]/page.tsx`](mdc:app/[locale]/knowledge/templates/[id]/page.tsx)。

## 关键技术

1.  **`react-markdown`**: 用于将 Markdown 字符串解析并渲染为 React 组件。
2.  **`remark-gfm`**: 一个 `react-markdown` 插件，用于支持 GitHub Flavored Markdown (GFM)，例如表格、删除线等。
3.  **Tailwind CSS**: 用于对渲染出的 HTML 元素进行样式化。
4.  **`@tailwindcss/typography`**: 一个 Tailwind CSS 插件，提供 `prose` class，用于快速应用美观的排版默认样式。

## 核心实现

核心的实现方式是向 `react-markdown` 的 `Markdown` 组件传入一个 `components` prop，通过它来覆盖默认的 HTML 元素渲染。

```tsx
import Markdown from 'react-markdown'
import remarkGfm from 'remark-gfm'

// ...

<div className="prose prose-sm max-w-none">
  <Markdown 
    remarkPlugins={[remarkGfm]}
    components={{
      h1: ({children}) => <h1 className="text-xl font-bold mb-2 pb-1 border-b">{children}</h1>,
      h2: ({children}) => <h2 className="text-lg font-semibold mb-2 mt-3">{children}</h2>,
      h3: ({children}) => <h3 className="text-base font-medium mb-1 mt-2">{children}</h3>,
      p: ({children}) => <p className="text-gray-600 my-1 leading-normal text-sm">{children}</p>,
      ul: ({children}) => <ul className="list-disc pl-4 my-1 space-y-0.5">{children}</ul>,
      ol: ({children}) => <ol className="list-decimal pl-4 my-1 space-y-0.5">{children}</ul>,
      li: ({children}) => <li className="text-gray-600 text-sm">{children}</li>,
      blockquote: ({children}) => <blockquote className="border-l-4 border-gray-300 pl-3 my-1 italic text-sm">{children}</blockquote>,
      code: ({children}) => <code className="bg-gray-100 rounded px-1 py-0.5 text-xs">{children}</code>,
      pre: ({children}) => <pre className="bg-gray-50 rounded-lg p-3 my-2 overflow-auto text-sm">{children}</pre>,
      table: ({children}) => <table className="min-w-full border-collapse my-4 text-sm">{children}</table>,
      thead: ({children}) => <thead className="bg-gray-50">{children}</thead>,
      tbody: ({children}) => <tbody className="divide-y divide-gray-200">{children}</tbody>,
      tr: ({children}) => <tr>{children}</tr>,
      th: ({children}) => <th className="px-3 py-2 text-left font-medium text-gray-900 border border-gray-200">{children}</th>,
      td: ({children}) => <td className="px-3 py-2 text-gray-600 border border-gray-200">{children}</td>
    }}
  >
    {/* Markdown content string goes here */}
  </Markdown>
</div>
```

## 样式化说明

-   **容器样式**: 最外层的 `div` 使用了 `prose prose-sm max-w-none`。
    -   `prose`: 应用 `@tailwindcss/typography` 插件的基础样式。
    -   `prose-sm`: 应用小尺寸的排版样式。
    -   `max-w-none`: 移除了 `prose` 默认的最大宽度限制，使其充满容器。
-   **组件级样式**: 每个自定义组件都使用了 Tailwind CSS 的原子类来精确控制样式，例如字体大小、颜色、边距、边框等。这种方式保证了 Markdown 内容在整个应用中的视觉一致性。

当您需要渲染 Markdown 内容时，请遵循此实践。
