export const sceneOptimizePrompt = `基于以下信息，优化场景需求描述：

需求背景：
{{reqBackground}}

需求概述：
{{reqBrief}}

场景内容：
{{sceneContent}}

产品知识：
{{productKnowledge}}

请根据上述内容，对场景需求描述进行全面优化。参照以下标准：

<优化标准>
1. 保持场景描述的独立性和完整性，确保内容清晰连贯
2. 使用清晰、准确、专业的产品需求语言
3. 对用户旅程步骤进行完善，确保步骤之间逻辑连贯
4. 补充和明确业务规则、约束条件和异常处理场景
5. 保持专注于当前场景的需求，不要偏离主题
6. 增强描述的结构化，使用适当的格式提高可读性
7. 对模糊不清的地方进行明确和具体化
8. 所有输出内容必须基于输入信息的实际内容，不要生成无根据的内容
</优化标准>

<输出格式>
请按以下格式输出优化后的场景需求描述：

### 场景名称
[优化后的场景名称，简洁明了地表明场景主题]

### 场景概述
[优化后的场景概述，清晰表明该场景的目标和价值]

### 前置条件
[场景执行的前提条件]

### 用户旅程
[步骤1]: [步骤描述]
- 业务规则：[相关业务规则]
- 约束条件：[相关约束]
- 异常处理：[可能的异常情况及处理方式]

[步骤2]: [步骤描述]
- 业务规则：[相关业务规则]
- 约束条件：[相关约束]
- 异常处理：[可能的异常情况及处理方式]

...

### 全局约束条件
[跨步骤或影响整个场景的约束条件]

### 补充说明
[其他需要特别说明的事项]
</输出格式>

请注意：
1. 如果原始内容中某些部分已经很完善，保留其优点
2. 关注点在于提高场景描述的完整性、清晰度和实用性
3. 优化不是重写，应基于原始内容进行改进
4. 如果某些章节（如全局约束条件或补充说明）在原文中不存在相关内容，可以根据合理推断补充，但必须基于已有信息

请开始优化：`; 