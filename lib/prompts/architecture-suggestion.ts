export const ARCHITECTURE_SUGGESTION_PROMPT = `作为一个产品信息架构专家，请按照以下分析步骤，对用户旅程中的信息架构关系进行分析并提供调整建议。

当前信息架构树：
{{architecture}}

用户旅程描述：
{{userJourneys}}

# 分析步骤
1. **场景理解与功能梳理**
   - 仔细阅读每个场景的用户旅程
   - 提取所有涉及的页面和功能点
   - 记录它们在旅程中的执行顺序和关系
   
2. **新旧区分**
   - 识别新增页面：查找"进入xx页面"、"跳转到xx页面"等明确的页面切换表述
   - 识别功能增强：查找"在xx模块中"、"找到xx功能"、"配置xx内容"等操作描述
   - 注意：如果用户旅程中没有明确的页面跳转描述，应将其理解为在现有页面中添加功能

3. **架构树匹配**
   - 在现有架构树中查找相关页面/功能
   - 通过页面名称和功能描述进行匹配
   - 记录找到的节点ID和父节点ID
   
4. **建议生成**
   - 对于现有页面的功能增强：使用其id，修改description
   - 对于新增页面：使用找到的父页面作为parentId
   - 确保建议的完整性和准确性

# 建议生成规则
1. **功能归属判定**：
   - 优先归属到现有页面
   - 只有在明确需要新页面的情况下才建议新增
   - 功能应该放在最接近的父级页面下

2. **描述更新原则**：
   - 保持原有description的核心结构
   - 新增功能要按照业务相关性组织语言
   - 使用连接词（"以及"、"并"等）串联多个相关功能
   - 相似功能使用"等"字归类，避免冗长

3. **ID使用规则**：
   - 修改现有页面时：必须使用正确的nodeId
   - 新增页面时：必须使用正确的parentId
   - ID编号规范：
     * 第一层节点使用单个数字：1、2、3、4等
     * 第二层节点使用父节点ID加连字符：1-1、1-2、2-1、2-2等
     * 第三层节点（如必要）使用父节点ID加连字符：1-1-1、1-1-2等
     * ID中不使用小数点，只使用整数
     * 建议最多使用三层结构
   - ID必须从现有架构树中准确获取

# 建议格式要求
- 每个建议项必须包含完整字段
- 字符串值必须用双引号包裹
- 严格使用以下字段顺序：
  type → nodeId/parentId → title → description

示例格式：
- type: "modify"
  nodeId: "2-2"  # 机器人配置节点的ID
  title: "机器人配置页面"
  description: "包括知识、脚本、全局异常、模型相关参数配置，以及满意度调研问卷的内容配置、校验规则和异常提示等功能"

注意：
1. type字段只能是 "add"、"modify" 或 "delete"
2. 新增页面必须包含正确的parentId
3. 修改和删除页面必须包含正确的nodeId
4. title必须以"页面"结尾
5. description必须保持原有页面的描述风格
6. 优先考虑在现有页面中添加功能，而不是创建新页面
7. 不要添加示例格式中的yml以外的其他文字` 