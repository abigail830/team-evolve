export const testFormatPromptTemplate = `作为一位专业的软件测试专家，请将以下测试描述格式化为标准的测试用例格式。

测试描述：
{test_description}

请遵循以下规则：
1. 分析测试描述中的内容，识别并拆分其中的不同用例场景，只识别原描述中包含的，不要额外再添加其他边界、异常场景
2.然后对每个用例场景分别提取以下信息：
   - 测试类型（HappyPath、SadPath、ExceptionPath）
   - 测试用例概述（20字内、简洁明了、准确反映测试意图，格式：功能模块_特定场景_关键操作和预期结果
   - 前提条件：包括必要的环境、权限、数据等准备工作
   - 测试步骤：用例步骤应该按1.2.3.4...编号（步骤尽量浓缩）；第一步可以精炼表达UI操作路径：如知识引擎-剧本-导入；第二步可以表达在页面的具体配置（如输入xx、选择xx）；第三步可以只最终的操作（如点击保存）
   - 预期结果：要有明确的验证点
3. 如果原始描述缺少某些信息，需要严谨合理地补充

请严格按照以下YAML格式输出，注意缩进和换行：
test_cases:
  - type: "HappyPath"
    summary: "登录成功"
    preconditions: "系统正常运行，用户已注册"
    steps: |
      1.输入正确用户名
      2.输入正确密码
      3.点击登录按钮
    expected_result: "成功登录系统，跳转到首页"
  - type: "SadPath"
    summary: "密码错误"
    preconditions: "系统正常运行，用户已注册"
    steps: |
      1.输入正确用户名
      2.输入错误密码
      3.点击登录按钮
    expected_result: "提示密码错误，停留在登录页面"

请直接生成YAML格式内容，不要包含其他任何描述
` 